(()=>{"use strict";var n={28:(n,t,e)=>{e.d(t,{Z:()=>C});var o=e(537),r=e.n(o),i=e(645),a=e.n(i),A=e(667),c=e.n(A),l=new URL(e(16),e.b),s=new URL(e(534),e.b),d=a()(r()),p=c()(l),u=c()(s);d.push([n.id,`*{\n    box-sizing: border-box;\n}\n\n@font-face {\n    font-family: 'Michland';\n    src: url(${p}) format('woff2'),\n        url(${u}) format('woff');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n\nhtml{\n    height: 100%;\n    --primary-color:rgb(24, 135, 199);\n}\nbody{\n    position: relative;\n    margin: 0;\n    min-height: 100%;\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 200px auto;\n    background-color: white;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nul{\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\ninput,select{\n    width: 90%;\n}\n\nlabel{\n    display: block;\n}\n\n#priority{\n    margin: 0;\n    padding: 0;\n    margin-bottom: 15px;\n}\n\n.header{\n    position: sticky;\n    top: 0px;\n    text-align: center;\n    grid-row: 1;\n    grid-column: 2;\n    background-color: rgb(255, 255, 255);\n    color: black;\n    font-size: 3rem;\n    text-shadow: 2px 4px rgb(91, 213, 235);\n    box-shadow: 0px 1px 10px black;\n    font-family: 'Michland';\n}\n.sidebar{\n    position: sticky;\n    top: 0px;\n    left: 0px;\n    height: 100vh;\n    grid-row: 1/-1;\n    display: grid;\n    grid-template-rows: 1fr 7fr;\n    background-color: var(--primary-color);\n    color: white;\n    padding: 10px;\n}\n\n.proj-button-container{\n    display: flex;\n}\n\n.proj-section button{\n    text-align: left;\n    border: none;\n    padding: 5px 10px;\n    width: 80%;\n    background-color: transparent;\n    border-radius: 10px;\n    color: white;\n    font-size: 1.2rem;\n    &:hover{\n        background-color: rgb(79, 179, 226);\n    }\n    &.highlight{\n        background-color: rgb(79, 179, 226);\n    }\n}\n\n.proj-add,.proj-delete{\n    margin: 0 auto;\n    margin-bottom: 10px;\n    flex: 1;\n    border: none;\n    background-color: transparent;\n    color: white;\n    font-size: 1.4rem;\n    border-radius: 20px;\n    text-shadow: 1px 1px black;\n    &:hover{\n        background-color:rgb(79, 179, 226) ;\n    }\n}\n\n\n.proj-section >ul{\n    display: flex;\n    flex-direction: column;\n    gap: 13px;\n    margin-top: -70px;\n}\n\n.proj-section >h3{\n    font-size: 4.5rem;\n    text-shadow: 3px 3px black;\n    font-family: 'Michland';\n}\n\n.main-content{\n    grid-row: 2/-1;\n    padding-left: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    >button{\n        position: sticky;\n        bottom: 20px;\n        right: 20px;\n        margin: 20px 20px;\n        border: 2px solid black;\n        background-color: var(--primary-color);\n        font-size: 1.7rem;\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        align-self:flex-end;\n        box-shadow: 0px 0px 5px black;\n    }\n    >button:hover{\n        background-color: rgb(14, 108, 172);\n    }\n    & h2{\n        margin: -1px 0px;\n        font-size: 5rem;\n        font-family: 'Michland';\n        font-weight: 600;\n        text-shadow: 2px 1px rgb(165, 169, 172);\n    }\n}\n\n.task{\n    background-color: rgb(245, 245, 245);\n    box-shadow: 1px 1px 5px black;\n    border-radius: 10px;\n    margin-bottom: 20px;\n    height: 150px;\n    width: 30%;\n    font-size: 1.8rem;\n    display: flex;\n    flex-direction: column;\n    & p{\n        margin:0;\n        font-weight: bold;\n        padding-left: 10px;\n    }\n    & p:last-of-type{\n        font-size: 1rem;\n        font-weight: 100;\n    }\n}\n\n.task span{\n    margin-top: auto;\n    display: flex;\n    >button{\n        flex: 1;\n        border: none;\n        font-size: 1.9rem;\n        background-color: var(--primary-color);\n        border-top: 1px solid black;\n        border-bottom: 1px solid black;\n    }\n    & .Check-Btn{\n        color: green;\n        border-right: 1px solid black;\n    }\n    >button:hover{\n        background-color: rgb(18, 100, 138);\n    }\n    & .Edit-Btn{\n        border-bottom-right-radius: 9px;\n        border-left: 1px solid black;\n    }\n}\n\n.logo{\n    display: flex;\n}\n\n#logo-para{\n    font-size: 3.7rem;\n    font-weight: bold;\n    margin: auto 0;\n    font-family: 'Michland';\n    color: black;\n    text-shadow: 1px 1px white;\n}\n\n.dialog {\n    border-radius: 10px;\n    border: none;\n    box-shadow: 0px 0px 40px rgb(1, 39, 82);\n    font-family: 'Michland';\n    width: 300px;\n    background-color: rgb(248, 248, 248);\n    & input{\n        border-radius: 5px;\n        padding-left: 5px;\n        outline: none;\n        border: 1px solid black;\n    }\n    & label{\n        font-size: 3rem;\n        font-weight: bold;\n        margin-top: 10px;\n        text-shadow: 1px 1px rgb(202, 202, 202)\n    }\n    & button{\n        padding: 10px 30px;\n        border-radius: 10px;\n        border: none;\n        box-shadow: 0px 0px 3px black;\n        background-color: var(--primary-color);\n        color: white;\n        font-family: 'Michland';\n        font-size: 2rem;\n        text-shadow: 2px 2px black;\n    }\n}\n\n.diag-container{\n    display: flex;\n    justify-content: space-between;\n}\n\n#confirmDialog{\n    width: 350px;\n    & p{\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n\n    }\n}\n\n#projDialog{\n    & label{\n        margin-bottom: 5px;\n    }\n    & input{\n        margin-bottom: 15px;\n    }\n}\n\n\n\n\n`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:["*{\n    box-sizing: border-box;\n}\n\n@font-face {\n    font-family: 'Michland';\n    src: url('Michland.woff2') format('woff2'),\n        url('Michland.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n\nhtml{\n    height: 100%;\n    --primary-color:rgb(24, 135, 199);\n}\nbody{\n    position: relative;\n    margin: 0;\n    min-height: 100%;\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 200px auto;\n    background-color: white;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nul{\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\ninput,select{\n    width: 90%;\n}\n\nlabel{\n    display: block;\n}\n\n#priority{\n    margin: 0;\n    padding: 0;\n    margin-bottom: 15px;\n}\n\n.header{\n    position: sticky;\n    top: 0px;\n    text-align: center;\n    grid-row: 1;\n    grid-column: 2;\n    background-color: rgb(255, 255, 255);\n    color: black;\n    font-size: 3rem;\n    text-shadow: 2px 4px rgb(91, 213, 235);\n    box-shadow: 0px 1px 10px black;\n    font-family: 'Michland';\n}\n.sidebar{\n    position: sticky;\n    top: 0px;\n    left: 0px;\n    height: 100vh;\n    grid-row: 1/-1;\n    display: grid;\n    grid-template-rows: 1fr 7fr;\n    background-color: var(--primary-color);\n    color: white;\n    padding: 10px;\n}\n\n.proj-button-container{\n    display: flex;\n}\n\n.proj-section button{\n    text-align: left;\n    border: none;\n    padding: 5px 10px;\n    width: 80%;\n    background-color: transparent;\n    border-radius: 10px;\n    color: white;\n    font-size: 1.2rem;\n    &:hover{\n        background-color: rgb(79, 179, 226);\n    }\n    &.highlight{\n        background-color: rgb(79, 179, 226);\n    }\n}\n\n.proj-add,.proj-delete{\n    margin: 0 auto;\n    margin-bottom: 10px;\n    flex: 1;\n    border: none;\n    background-color: transparent;\n    color: white;\n    font-size: 1.4rem;\n    border-radius: 20px;\n    text-shadow: 1px 1px black;\n    &:hover{\n        background-color:rgb(79, 179, 226) ;\n    }\n}\n\n\n.proj-section >ul{\n    display: flex;\n    flex-direction: column;\n    gap: 13px;\n    margin-top: -70px;\n}\n\n.proj-section >h3{\n    font-size: 4.5rem;\n    text-shadow: 3px 3px black;\n    font-family: 'Michland';\n}\n\n.main-content{\n    grid-row: 2/-1;\n    padding-left: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    >button{\n        position: sticky;\n        bottom: 20px;\n        right: 20px;\n        margin: 20px 20px;\n        border: 2px solid black;\n        background-color: var(--primary-color);\n        font-size: 1.7rem;\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        align-self:flex-end;\n        box-shadow: 0px 0px 5px black;\n    }\n    >button:hover{\n        background-color: rgb(14, 108, 172);\n    }\n    & h2{\n        margin: -1px 0px;\n        font-size: 5rem;\n        font-family: 'Michland';\n        font-weight: 600;\n        text-shadow: 2px 1px rgb(165, 169, 172);\n    }\n}\n\n.task{\n    background-color: rgb(245, 245, 245);\n    box-shadow: 1px 1px 5px black;\n    border-radius: 10px;\n    margin-bottom: 20px;\n    height: 150px;\n    width: 30%;\n    font-size: 1.8rem;\n    display: flex;\n    flex-direction: column;\n    & p{\n        margin:0;\n        font-weight: bold;\n        padding-left: 10px;\n    }\n    & p:last-of-type{\n        font-size: 1rem;\n        font-weight: 100;\n    }\n}\n\n.task span{\n    margin-top: auto;\n    display: flex;\n    >button{\n        flex: 1;\n        border: none;\n        font-size: 1.9rem;\n        background-color: var(--primary-color);\n        border-top: 1px solid black;\n        border-bottom: 1px solid black;\n    }\n    & .Check-Btn{\n        color: green;\n        border-right: 1px solid black;\n    }\n    >button:hover{\n        background-color: rgb(18, 100, 138);\n    }\n    & .Edit-Btn{\n        border-bottom-right-radius: 9px;\n        border-left: 1px solid black;\n    }\n}\n\n.logo{\n    display: flex;\n}\n\n#logo-para{\n    font-size: 3.7rem;\n    font-weight: bold;\n    margin: auto 0;\n    font-family: 'Michland';\n    color: black;\n    text-shadow: 1px 1px white;\n}\n\n.dialog {\n    border-radius: 10px;\n    border: none;\n    box-shadow: 0px 0px 40px rgb(1, 39, 82);\n    font-family: 'Michland';\n    width: 300px;\n    background-color: rgb(248, 248, 248);\n    & input{\n        border-radius: 5px;\n        padding-left: 5px;\n        outline: none;\n        border: 1px solid black;\n    }\n    & label{\n        font-size: 3rem;\n        font-weight: bold;\n        margin-top: 10px;\n        text-shadow: 1px 1px rgb(202, 202, 202)\n    }\n    & button{\n        padding: 10px 30px;\n        border-radius: 10px;\n        border: none;\n        box-shadow: 0px 0px 3px black;\n        background-color: var(--primary-color);\n        color: white;\n        font-family: 'Michland';\n        font-size: 2rem;\n        text-shadow: 2px 2px black;\n    }\n}\n\n.diag-container{\n    display: flex;\n    justify-content: space-between;\n}\n\n#confirmDialog{\n    width: 350px;\n    & p{\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n\n    }\n}\n\n#projDialog{\n    & label{\n        margin-bottom: 5px;\n    }\n    & input{\n        margin-bottom: 15px;\n    }\n}\n\n\n\n\n"],sourceRoot:""}]);const C=d},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},667:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],l=o.base?c[0]+o.base:c[0],s=i[l]||0,d="".concat(l," ").concat(s);i[l]=s+1;var p=e(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var C=r(u,o);o.byIndex=A,t.splice(A,0,{identifier:d,updater:C,references:1})}a.push(d)}return a}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=e(i[a]);t[A].references--}for(var c=o(n,r),l=0;l<i.length;l++){var s=e(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},534:(n,t,e)=>{n.exports=e.p+"0045a80964e976d7cfd0.woff"},16:(n,t,e)=>{n.exports=e.p+"9de28248be16e43c5184.woff2"}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),i=e(569),a=e.n(i),A=e(565),c=e.n(A),l=e(216),s=e.n(l),d=e(589),p=e.n(d),u=e(28),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=a().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=s(),t()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class f{constructor(n,t,e,o,r=!1){this.title=n,this.description=t,this.dueDate=e,this.priority=o,this.isComplete=r}}function m(){return localStorage.length}function g(n,t){t=JSON.stringify(t),localStorage.setItem(`${n}`,t)}function b(n){const t=localStorage.getItem(n);return JSON.parse(t)}function B(n){return localStorage.key(n)}let x="";function h(){return x}const I=e.p+"6b569d02e3e2a9e881d6.svg",y=e.p+"2484007181bb43b1a273.svg";let v=null,w=null;function k(n,t){v||(v=document.querySelector(".task-list"));const e=document.createElement("li"),o=function(n){const t=document.createElement("div");t.classList="task";const e=document.createElement("div"),o=document.createElement("p"),r=document.createElement("p");o.textContent=n.title,r.textContent=n.description,e.appendChild(o),e.appendChild(r);const i=document.createElement("span"),a=document.createElement("button");a.textContent="✓",a.classList="Check-Btn";const A=document.createElement("button");A.classList="Delete-Btn";const c=document.createElement("button");c.classList="Edit-Btn";const l=new Image;l.src=y,l.height=20,l.width=10;const s=new Image;return s.src=I,s.height=20,s.width=10,A.appendChild(l),c.appendChild(s),i.appendChild(a),i.appendChild(A),i.appendChild(c),t.appendChild(e),t.appendChild(i),t}(n);o.setAttribute("data-index",t-1),o.style.borderLeft=`7px solid ${n.priority}`,n.isComplete&&(o.style.borderTop="7px solid green"),e.appendChild(o),v.appendChild(e)}function Q(n){v||(v=document.querySelector(".task-list")),v.textContent="",n&&b(n).forEach(((n,t)=>k(n,t+1)))}function S(){w||(w=document.querySelector("#project-list")),w.textContent="";for(let n=0;n<m();n++){const[t,e]=B(n).split("%$%");Y(e,t)}Q(h())}function j(n){n.style.border="2px solid red"}function E(n){n.style.border=""}function Y(n,t){w||(w=document.querySelector("#project-list"));const e=`${t}%$%${n}`,o=document.createElement("li"),r=document.createElement("button");r.setAttribute("data-proj",e),r.textContent=t,M(r),o.appendChild(r),w.appendChild(o),Q(e)}function M(n){const t=h();""!==t&&(document.querySelector(`button[data-proj="${t}"]`).classList=""),n.classList="highlight";const e=n.getAttribute("data-proj");x=e}let z=-1;function D(n){const[t,e,o,r]=n.split("|");return new f(t,e,o,r)}function L(n){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},L(n)}function T(n,t){if(t.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+t.length+" present")}function q(n){T(1,arguments);var t=Object.prototype.toString.call(n);return n instanceof Date||"object"===L(n)&&"[object Date]"===t?new Date(n.getTime()):"number"==typeof n||"[object Number]"===t?new Date(n):("string"!=typeof n&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function U(n){let t=!0;return n.forEach((n=>{""===n.value?(t=!1,j(n)):E(n)})),t}function Z(n){n.forEach((n=>{n.value="",E(n)}))}const O=document.querySelector("#taskDiag"),$=document.querySelector("#close"),J=document.querySelector("#close + button"),N=document.querySelector("#priority");let R="orange";const P=document.querySelectorAll("#taskDiag input");function W(){""!==h()&&(Z(P),O.showModal())}O.addEventListener("close",(()=>{J.textContent="Add"})),$.addEventListener("click",(n=>{n.preventDefault(),O.close()})),J.addEventListener("click",(n=>{if(n.preventDefault(),function(){let n=U(P);if(n){const t=P[2].value,e=new Date(t);e.setHours(23,59,59,99),function(n,t){T(2,arguments);var e=q(n),o=q(t),r=e.getTime()-o.getTime();return r<0?-1:r>0?1:r}(e,new Date)<0&&(n=!1,j(P[2]))}return n}()){!function(n){n.forEach((n=>E(n)))}(P);const n=function(){let n="";return P.forEach((t=>n+=t.value+"|")),n+=`${R}`,n}();if("Edit"===J.textContent)return function(n){const t=h(),e=b(t),o=D(n);o.isComplete=e[z].isComplete,e[z]=o,g(t,e),Q(t)}(n),void O.close();(function(n){k(n,function(n,t){const e=b(n);e.push(t);const o=e.length;return g(n,e),o}(h(),n))})(D(n)),O.close()}else console.log("Invalid")})),N.addEventListener("change",(()=>{R=N.value}));const H=document.querySelector("#projDialog"),F=document.querySelector("#confirmDialog"),V=document.querySelector("#proj-close"),_=document.querySelector("#proj-append"),G=document.querySelectorAll("#projDialog input"),X=document.querySelector("#confirmYes");V.addEventListener("click",(n=>{n.preventDefault(),H.close()})),_.addEventListener("click",(n=>{n.preventDefault(),U(G)&&(function(n){const t=m();g(`${n}%$%${t}`,[]),Y(t,n)}(G[0].value),H.close())})),X.addEventListener("click",(n=>{var t;n.preventDefault(),""!==x&&(t=x,localStorage.removeItem(t),x="",S()),F.close()}));const K=document.querySelector("#add-task"),nn=document.querySelector(".proj-add"),tn=document.querySelector(".proj-delete");m()||g("House Work%$%0",[new f("Laundry","Do the Laundry","2023-11-29","orange",!0)]),S(),K.addEventListener("click",W),nn.addEventListener("click",(function(){Z(G),H.showModal()})),tn.addEventListener("click",(function(){F.showModal()})),document.querySelector("#project-list").addEventListener("click",(n=>{const t=n.target,e=t.getAttribute("data-proj");e&&(M(t),Q(e))})),document.querySelector(".task-list").addEventListener("click",(n=>{const t=n.composedPath();if("BUTTON"!==t[0].tagName)return;const e=t[2].getAttribute("data-index"),o=t[0].getAttribute("class").charAt(0);var r;"C"===o?function(n){const t=h(),e=b(t),o=e[n];o.isComplete=!o.isComplete,g(t,e),Q(t)}(+e):"D"===o?function(n){const t=h(),e=b(t);g(t,[...e.slice(0,n),...e.slice(n+1)]),Q(t)}(+e):(z=+e,function(n){J.textContent="Edit",W(),P[0].value=n.title,P[1].value=n.description,P[2].value=n.dueDate}((r=+e,b(h())[r])))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,